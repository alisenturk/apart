
server.context-path=/

spring.datasource.url = jdbc:mysql://localhost:3306/apartdb?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = MySql920.Db
 
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query= SELECT 1
#spring.datasource.sql-script-encoding=Charsets.UTF_8
spring.datasource.sqlScriptEncoding=UTF-8
# Show or not log for each sql query
spring.jpa.show-sql = true
 
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
 
# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
 
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
 
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true

#connection to a JNDI DataSource
#spring.datasource.jndi-name=java:jboss/datasources/customers 


spring.devtools.livereload.enabled=true 
spring.devtools.livereload.port=35729 

spring.devtools.restart.enabled=true 
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties 
spring.devtools.restart.poll-interval=1000 
spring.devtools.restart.quiet-period=400 


urlshorter.openmethod.performans = true

